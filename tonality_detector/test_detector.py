from dostoevsky.tokenization import RegexTokenizer
from dostoevsky.models import FastTextSocialNetworkModel
from detector import print_tonality


# Тестрование библиотеки, определяющей тональность текста
def test_tonality():
    test = [
        '''Ужасное расположение и распределение товаров. Два уровня и на каждом свои кассы. Чтобы купить разные группы товаров нужно отстоять две очереди.''',
        '''Это не шаурма это ужас,куча майонеза,лук одна кожура верхний слой который мы при готовке выкладываем, картофель фри из пачек сухой, мясо порезано тонкими пластами, не пойму как оно приготавливалось явно не на гриле, мясо было не свежее, в итоге самый съедобный оказался лаваш, не рекомендую.''',
        '''Рядом с домом, вкусная картошечка и обалденные молочные коктейли и довольно быстрое обслуживание, приятные кассиры''',
        '''Замечательный телефон, пользуюсь им уже 2 года, очень нравится!''',
        '''Был в этом магазине в прошлом году, больше туда приходить не собираюсь, некомпетентные продавцы, плохое обслуживание((''',
        '''Идеальный мастер!:)''',
        '''Уроды, как можно так поступить с человеком, просто ужас?!'''
    ]

    tokenizer = RegexTokenizer()
    model = FastTextSocialNetworkModel(tokenizer=tokenizer)

    results = model.predict(test, k=2)
    for i, el in enumerate(zip(test, results)):
        token, sentiment = el
        print_tonality(test[i], sentiment.items())


if __name__ == '__main__':
    test_tonality()